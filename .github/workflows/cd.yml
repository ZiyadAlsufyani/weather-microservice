name: CD Pipeline

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ main ]
    
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit --progress=false --fund=false --legacy-peer-deps
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        timeout-minutes: 10
          
      - name: Build application
        run: npm run build
        
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ github.sha }}
          
          
  Deploy-Production:
        runs-on: ubuntu-latest
        steps:

            - uses: actions/checkout@v3

            - name: Install Vercel CLI
              run: npm install --global vercel

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}